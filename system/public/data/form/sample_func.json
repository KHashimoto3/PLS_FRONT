{
"formTitle":"関数",
"questionObj":{
  "title":"サンプル問題",
  "description":"aとbの２つの値が入力されます。初期値が0の変数sumにaを繰り返し足し続けたとき、何回足すとbを超えるかを求める関数を作成し、その求めた数を出力するプログラムを作成してください。",
  "input":"4\n32\n",
  "output":"9"
},
"assistObj": [
    {
      "id": 1,
      "type": 0,
      "comp":"-1",
      "compData":"",
      "title": "ヘッダーコメントの記述",
      "body": "プログラムの説明を書きます",
      "sampleExp": "とある問題を解くときのコードの説明",
      "sample":
        "/**\n * 問題1: 合計と平均を求めるプログラム\n * 日付: 2021/04/01\n * 学籍番号: 2121000\n * 作成者: 神奈川太郎\n */",
      "notice": "誰がいつどのようなプログラムを作ったのかを書いておきます。"
    },
    {
      "id": 2,
      "type": 0,
      "comp":"-1",
      "compData":"",
      "title": "ヘッダファイルの読み込み、マクロ定義",
      "body": "プログラムで使用する標準関数を読み込みます。また、プログラム内で頻繁に使用する値を定数として設定します。",
      "sampleExp":
        "標準関数（printfやscanf）と、文字列を操作する関数（strcpyやstrcmp）を使用するとき",
      "sample": "#include <stdio.h>\n#include <string.h>",
      "notice":
        "最初はstdio.hを読み込み、必要に応じてヘッダファイルを追加で読み込ませます。"
    },
    {
      "id": 3,
      "type": -1,
      "comp":"-1",
      "compData":"",
      "title": "main関数",
      "body": "main関数を書きます。ここで書く中の処理は、return 0; のみで構いません。",
      "sampleExp": "基本のmain関数（処理なし）",
      "sample": "int main(void) {\n    //処理\n    return 0;\n}",
      "notice": "{の前はスペースを入れ、main関数の中はインデントをつけます。"
    },
    {
      "id": 4,
      "type": 1,
      "comp":"-1",
      "compData":"",
      "title": "変数・配列の宣言",
      "body": "変数や配列の宣言を書きます",
      "sampleExp": "配列と0で初期化された変数sum、変数aveを宣言するとき",
      "sample":
        "int    numArray[3] = {10, 20, 30};\nint    sum  = 0;\ndouble ave;",
      "notice":
        "変数の型と名前の位置は、タブを活用して揃えます。１行には１つの宣言が原則です。"
    },
    {
      "id": 5,
      "type": 1,
      "comp":"-1",
      "compData":"",
      "title": "値の入力",
      "body": "値を入力します。",
      "sampleExp": "すでに宣言された3つの変数へ入力を行うとき",
      "sample": "scanf(\"%d%d%lf\", &a, &b, &c);",
      "notice": "scanf内の,の後ろにはスペースを入れて読みやすくします。"
    },
    {
      "id": 6,
      "type": 0,
      "comp":"6",
      "compData":{"mode":2,"cnt":3},
      "title": "関数の定義",
      "body": "ある処理の塊を関数として定義します。どのような処理を定義しているのかを、コメントで残すことも重要です。",
      "sampleExp": "合計を求める関数を定義するとき",
      "sample": "scanf(\"%d%d%lf\", &a, &b, &c);",
      "notice": "他の人が見てもわかりやすい関数名としてください。"
    },
    {
      "id": 7,
      "type": 1,
      "comp":"-1",
      "compData":"",
      "title": "関数の呼び出し",
      "body": "定義した関数を呼び出します。返し値がある場合は、それを変数に格納するようにします。",
      "sampleExp": "合計を求める関数を呼び出すとき。",
      "sample": "for (i = 0; i < 5; i++) {\n    //繰り返す処理\n}",
      "notice":
        "代入の際の=の前後にはスペースを入れます。"
    },
    {
      "id": 8,
      "type": 1,
      "comp":"-1",
      "compData":"",
      "title": "値の出力",
      "body": "値を出力します。",
      "sampleExp": "2つの変数の値を用いて出力するとき",
      "sample": "printf(\"合計：%d¥n\", sum);",
      "notice": "printf内の,の後ろにはスペースを入れて読みやすくします。"
    }
  ]
}